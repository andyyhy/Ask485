#!/bin/bash
# Search Engine init
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
set -x
# Sanity check command line options
usage() {
  echo "Usage: $0 (start|stop|restart|status)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi
# Parse argument.  $1 is the first argument
case $1 in
  "start")
    if pgrep -f "flask --app search run --host 0.0.0.0 --port 8000"
    then
        echo "Error: search server is already running"
        exit 1
    fi
    if [ ! -f "var/search.sqlite3" ]
    then
        echo "Error: can't find search database var/search.sqlite3"
        exit 1
    fi
    ./bin/index status
    if [ $? != 0]
    then
        echo "index server is not running"
        exit 1
    fi
    echo "starting search server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
    ;;
  "stop")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
    ;;
  "restart")
    echo "stopping search server ..."
    pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
    echo "starting search server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
    ;;
  "status")
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" | wc -l)
    set -o pipefail
    if [ "$NPROCS" -eq 1 ]; then
    echo "search server running"
    exit
    elif [ "$NPROCS" -eq 0 ]; then
    echo "search server stopped"
    exit 1
    fi
    ;;
  *)
    usage
    exit 1
    ;;
esac